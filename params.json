{
  "name": "Circleci-docs",
  "tagline": "Documentation for CircleCI.",
  "body": "# CircleCI Documentation [![CircleCI Build Status](https://circleci.com/gh/circleci/circleci-docs.svg?style=shield)](https://circleci.com/gh/circleci/circleci-docs) [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://raw.githubusercontent.com/circleci/circleci-docs/master/LICENSE) [![CircleCi Community](https://img.shields.io/badge/community-CircleCI%20Discuss-343434.svg)](https://discuss.circleci.com)\r\n\r\nThis is the public repository of <https://circleci.com/docs/>, a static website \r\ngenerated by [Jekyll](https://jekyllrb.com/). If you find any errors or have \r\ndocumentation request, please feel free to contribute by following the instructions below. \r\nOtherwise, you can always open an \r\n[Issue](https://github.com/circleci/circleci-docs/issues) on this project.\r\n\r\n## Work on CircleCI Docs Locally\r\nThere are two good ways to run a development server locally:\r\n\r\n1. **[Use Vagrant](#vagrant-setup)**. The easiest way to get going is to use Vagrant. This gives you a clean \r\nenvironment with all the right versions of everything we need. \r\n\r\n2. [Use your existing Ruby environment](#bare-setup). If you already have a Ruby environment you like (eg: you have rvm set up and feel comfortable using it) and feel comfortable installing dependencies with bundler and such, you can run it directly on your machine.\r\n\r\n\r\n### Vagrant Setup\r\n\r\n#### Prerequisites\r\nIf you're going the Vagrant route, the following software need to be installed:\r\n\r\n- Git - system version should be fine\r\n- Vagrant - [download directly](https://www.vagrantup.com/downloads.html), use apt-get (`sudo apt-get install vagrant`), or use brew (`brew cask install vagrant`).\r\n- VirtualBox - [download directly](https://www.virtualbox.org/wiki/Downloads), use apt-get (`sudo apt-get install virtualbox`), or use brew (`brew cask install virtualbox`). Best to use version 5.0+. Another Vagrant Provider such as Docker could be used instead but VirtualBox is the default.\r\n\r\n#### First Run\r\nTo get a local copy of circleci.com/docs/ up and running you can run the \r\nfollowing commands (NOTE: The first time you run `./jctl start`, Vagrant will provision the entire VM for \r\nyou based on what's in `bootstrap.sh`. It'll then run Jekyll for you. The whole process can take a few minutes, but it's a one-time deal.):\r\n\r\n```\r\ngit clone https://github.com/circleci/circleci-docs.git\r\ncd circleci-docs\r\n./jctl start\r\n```\r\n\r\nOnce this is complete, Jekyll will automatically start in the VM. Vagrant starts forwarding port 4040 for you. You can \r\nsimply view the docs at http://localhost:4040/docs/ .\r\n\r\n####  Editing Docs\r\n\r\nAll of the docs can be found in the `jekyll/_docs` directory. You can make any \r\nchanges that you need there, then run `./jctl rebuild` to have Jekyll rebuild \r\nthe site. How to use [**jctl**](#jekyll-controller-jctl) can be found below.\r\n\r\nAs an alternative to using JCTL, you can log into the VM directly to interact \r\nwith Jekyll. Run `vagrant ssh` to enter the VM directly. `cd /vagrant/jekyll` \r\nwill take you to where the repository files are in the VM. From there you could \r\nrun standard Jekyll commands such as `jekyll server` with whatever flags you \r\nwould like.\r\n\r\n### Bare Setup\r\n\r\n#### Prerequisites\r\nGoing the bare route, the following software need to be installed:\r\n\r\n- Git - system version should be fine\r\n- Ruby - the version of Ruby currently being used with this project will be noted in the Gemfile. If you need to manage multiple Ruby versions, we recommend RVM though there are similar solutions you can use.\r\n- [Jekyll](https://jekyllrb.com/) - Jekyll version 3.\r\n- [HTMLProofer](https://github.com/gjtorikian/html-proofer) - HTMLProofer is used for testing links, images, and the HTML. The docs site needs to pass the build and test to be deployed. You can use HTMLProofer to test things before you send changes up to GitHub.\r\n\r\nYou're welcome to also use Bundler to install the Gems needed. If you are using RVM (or similar), just make sure they all play nice together.\r\n\r\n#### First Run\r\nTo get a local copy of circleci.com/docs/ up and running you can run the \r\nfollowing commands:\r\n\r\n```\r\ngit clone https://github.com/circleci/circleci-docs.git\r\ncd circleci-docs/jekyll\r\njekyll serve\r\n```\r\n\r\nJekyll will build the site and start a web server. It can be viewed in your \r\nbrowser at [](http://localhost:4000/docs/). To stop Jekyll and regain controll \r\nof your terminal, just type `CTRL-C`.\r\n\r\n####  Editing Docs\r\n\r\nAll of the docs can be found in the `jekyll/_docs` directory. You can make any \r\nchanges that you need there, then re-run `jekyll serve` to have Jekyll rebuild \r\nand serve the site.\r\n\r\n## Jekyll Controller (JTCL)\r\n\r\nThis is a Bash wrapper script to talk to Jekyll & Vagrant.\r\n\r\n- start: Starts Jekyll. Is Vagrant isn't running, starts Vagrant as well.\r\n- rebuild: Tells Jekyll to rebuild the site.\r\n- stop: Shuts down the entire VM (vagrant halt), including Jekyll.\r\n- restart: Restarts the Vagrant machine. Basically an alias of stop then start.\r\n\r\n## Jekyll Commands\r\n\r\n`jekyll build` - this tells Jekyll to generate the static files for the site, \r\nand place them in the `jekyll/_site` directory. It does not serve the files.\r\n\r\n`jekyll serve` - this first runs `jekyll build`, then starts up an included \r\nmini webserver to serve the files from the `'jekyll_site` directory. Listens to \r\nlocalhost:4000 by default.\r\n\r\n`jekyll serve --detach` - this serves the site as before, but runs in the \r\nbackground so that you can still use the same terminal window. Jekyll will tell \r\nyou which process ID belongs to it before it goes so you can use that to kill \r\nit when you want to stop Jekyll. `kill -9 P_ID`. If you lose the ID, you can \r\nrun `pkill -f jekyll` to stop all Jekyll instances.\r\n\r\n## License Information\r\n\r\nDocumentation (guides, references, and associated images) is licensed as \r\nCreative Commons Attribution-NonCommercial-ShareAlike CC BY-NC-SA. The full \r\nlicense can be found \r\n[here](http://creativecommons.org/licenses/by-nc-sa/4.0/legalcode), and the \r\nhuman-readable summary [here](http://creativecommons.org/licenses/by-nc-sa/4.0/).\r\n\r\nEverything in this repository not covered above is licensed under the \r\n[included MIT license](LICENSE).\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}